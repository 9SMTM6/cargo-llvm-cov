name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - staging
  schedule:
    - cron: '40 1 * * *'

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: 1

defaults:
  run:
    shell: bash

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-18.04
          - os: macos-latest
          # TODO: does -Zinstrument-coverage supports windows?
          # - os: windows-latest
          - os: ubuntu-18.04
            target: x86_64-unknown-linux-musl
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/github-actions/install-rust@main
        with:
          component: llvm-tools-preview
      - run: cargo install cargo-hack
      - run: cargo install rustfilt
      - run: cargo install cross
        if: matrix.target != ''
      - run: cross test --target ${{ matrix.target }}
        if: matrix.target != ''
      - run: cargo test
        if: matrix.target == ''
      - name: test
        run: |
          set -x
          if [[ -z "${{ matrix.target }}" ]]; then
            cargo install --path .
          else
            cargo install --path . --target ${{ matrix.target }}
          fi
          git clone https://github.com/taiki-e/easytime.git
          cd easytime
          # llvm-cov report
          cargo llvm-cov
          cargo clean
          # llvm-cov export -format=text
          cargo llvm-cov --json
          cargo clean
          # llvm-cov export -format=lcov
          cargo llvm-cov --lcov
          cargo clean
          # llvm-cov show -format=text
          cargo llvm-cov --text
          cargo clean
          # llvm-cov show -format=html
          cargo llvm-cov --html
          cargo clean
      - run: tools/check-minimal-versions.sh

  build:
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/github-actions/install-rust@main
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo build

  clippy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/github-actions/install-rust@main
        with:
          component: clippy
      - run: cargo clippy --all --all-features --all-targets

  fmt:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/github-actions/install-rust@main
        with:
          component: rustfmt
      - run: cargo fmt --all -- --check

  shellcheck:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: shellcheck **/*.sh

  # This job doesn't actually test anything, but they're used to tell bors the
  # build completed, as there is no practical way to detect when a workflow is
  # successful listening to webhooks only.
  #
  # ALL THE PREVIOUS JOBS NEEDS TO BE ADDED TO THE `needs` SECTION OF THIS JOB!

  ci-success:
    name: ci
    if: github.event_name == 'push' && success()
    needs:
      - test
      - clippy
      - fmt
      - shellcheck
    runs-on: ubuntu-18.04
    steps:
      - name: Mark the job as a success
        run: exit 0
